/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
[DataContract(Namespace="1")]
public partial class VersionTest : TBase
{
  private string _value;
  private string _required_value;
  private string _optional_value;
  private string _value_default;
  private string _required_value_default;
  private string _optional_value_default;

  [DataMember]
  public string Value
  {
    get
    {
      return _value;
    }
    set
    {
      __isset.value = true;
      this._value = value;
    }
  }

  [DataMember]
  public string Required_value
  {
    get
    {
      return _required_value;
    }
    set
    {
      __isset.required_value = true;
      this._required_value = value;
    }
  }

  [DataMember]
  public string Optional_value
  {
    get
    {
      return _optional_value;
    }
    set
    {
      __isset.optional_value = true;
      this._optional_value = value;
    }
  }

  [DataMember]
  public string Value_default
  {
    get
    {
      return _value_default;
    }
    set
    {
      __isset.value_default = true;
      this._value_default = value;
    }
  }

  [DataMember]
  public string Required_value_default
  {
    get
    {
      return _required_value_default;
    }
    set
    {
      __isset.required_value_default = true;
      this._required_value_default = value;
    }
  }

  [DataMember]
  public string Optional_value_default
  {
    get
    {
      return _optional_value_default;
    }
    set
    {
      __isset.optional_value_default = true;
      this._optional_value_default = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  [DataContract]
  public struct Isset {
    public bool value;
    public bool required_value;
    public bool optional_value;
    public bool value_default;
    public bool required_value_default;
    public bool optional_value_default;
  }

  public VersionTest() {
    this._value_default = "asdf";
    this._required_value_default = "asdf2";
    this._optional_value_default = "asdf3";
  }

  public void Read (TProtocol iprot)
  {
    TField field;
    iprot.ReadStructBegin();
    while (true)
    {
      field = iprot.ReadFieldBegin();
      if (field.Type == TType.Stop) { 
        break;
      }
      switch (field.ID)
      {
        case 1:
          if (field.Type == TType.String) {
            Value = iprot.ReadString();
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 2:
          if (field.Type == TType.String) {
            Required_value = iprot.ReadString();
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 3:
          if (field.Type == TType.String) {
            Optional_value = iprot.ReadString();
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 4:
          if (field.Type == TType.String) {
            Value_default = iprot.ReadString();
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 5:
          if (field.Type == TType.String) {
            Required_value_default = iprot.ReadString();
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 6:
          if (field.Type == TType.String) {
            Optional_value_default = iprot.ReadString();
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        default: 
          TProtocolUtil.Skip(iprot, field.Type);
          break;
      }
      iprot.ReadFieldEnd();
    }
    iprot.ReadStructEnd();
  }

  public void Write(TProtocol oprot) {
    TStruct struc = new TStruct("VersionTest");
    oprot.WriteStructBegin(struc);
    TField field = new TField();
    if (Value != null && __isset.value) {
      field.Name = "value";
      field.Type = TType.String;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Value);
      oprot.WriteFieldEnd();
    }
    if (Required_value != null && __isset.required_value) {
      field.Name = "required_value";
      field.Type = TType.String;
      field.ID = 2;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Required_value);
      oprot.WriteFieldEnd();
    }
    if (Optional_value != null && __isset.optional_value) {
      field.Name = "optional_value";
      field.Type = TType.String;
      field.ID = 3;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Optional_value);
      oprot.WriteFieldEnd();
    }
    if (Value_default != null && __isset.value_default) {
      field.Name = "value_default";
      field.Type = TType.String;
      field.ID = 4;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Value_default);
      oprot.WriteFieldEnd();
    }
    if (Required_value_default != null && __isset.required_value_default) {
      field.Name = "required_value_default";
      field.Type = TType.String;
      field.ID = 5;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Required_value_default);
      oprot.WriteFieldEnd();
    }
    if (Optional_value_default != null && __isset.optional_value_default) {
      field.Name = "optional_value_default";
      field.Type = TType.String;
      field.ID = 6;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Optional_value_default);
      oprot.WriteFieldEnd();
    }
    oprot.WriteFieldStop();
    oprot.WriteStructEnd();
  }

  public override string ToString() {
    StringBuilder sb = new StringBuilder("VersionTest(");
    sb.Append("Value: ");
    sb.Append(Value);
    sb.Append(",Required_value: ");
    sb.Append(Required_value);
    sb.Append(",Optional_value: ");
    sb.Append(Optional_value);
    sb.Append(",Value_default: ");
    sb.Append(Value_default);
    sb.Append(",Required_value_default: ");
    sb.Append(Required_value_default);
    sb.Append(",Optional_value_default: ");
    sb.Append(Optional_value_default);
    sb.Append(")");
    return sb.ToString();
  }

}

