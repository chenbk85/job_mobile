/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace nBingo
{
  public partial class BingoGameServer {
    public interface Iface {
      s_LG2X_LOGIN X2LG_LOGIN(s_X2LG_LOGIN Data);
      #if SILVERLIGHT
      IAsyncResult Begin_X2LG_LOGIN(AsyncCallback callback, object state, s_X2LG_LOGIN Data);
      s_LG2X_LOGIN End_X2LG_LOGIN(IAsyncResult asyncResult);
      #endif
    }

    public class Client : Iface {
      public Client(TProtocol prot) : this(prot, prot)
      {
      }

      public Client(TProtocol iprot, TProtocol oprot)
      {
        iprot_ = iprot;
        oprot_ = oprot;
      }

      protected TProtocol iprot_;
      protected TProtocol oprot_;
      protected int seqid_;

      public TProtocol InputProtocol
      {
        get { return iprot_; }
      }
      public TProtocol OutputProtocol
      {
        get { return oprot_; }
      }


      
      #if SILVERLIGHT
      public IAsyncResult Begin_X2LG_LOGIN(AsyncCallback callback, object state, s_X2LG_LOGIN Data)
      {
        return send_X2LG_LOGIN(callback, state, Data);
      }

      public s_LG2X_LOGIN End_X2LG_LOGIN(IAsyncResult asyncResult)
      {
        oprot_.Transport.EndFlush(asyncResult);
        return recv_X2LG_LOGIN();
      }

      #endif

      public s_LG2X_LOGIN X2LG_LOGIN(s_X2LG_LOGIN Data)
      {
        #if !SILVERLIGHT
        send_X2LG_LOGIN(Data);
        return recv_X2LG_LOGIN();

        #else
        var asyncResult = Begin_X2LG_LOGIN(null, null, Data);
        return End_X2LG_LOGIN(asyncResult);

        #endif
      }
      #if SILVERLIGHT
      public IAsyncResult send_X2LG_LOGIN(AsyncCallback callback, object state, s_X2LG_LOGIN Data)
      #else
      public void send_X2LG_LOGIN(s_X2LG_LOGIN Data)
      #endif
      {
        oprot_.WriteMessageBegin(new TMessage("X2LG_LOGIN", TMessageType.Call, seqid_));
        X2LG_LOGIN_args args = new X2LG_LOGIN_args();
        args.Data = Data;
        args.Write(oprot_);
        oprot_.WriteMessageEnd();
        #if SILVERLIGHT
        return oprot_.Transport.BeginFlush(callback, state);
        #else
        oprot_.Transport.Flush();
        #endif
      }

      public s_LG2X_LOGIN recv_X2LG_LOGIN()
      {
        TMessage msg = iprot_.ReadMessageBegin();
        if (msg.Type == TMessageType.Exception) {
          TApplicationException x = TApplicationException.Read(iprot_);
          iprot_.ReadMessageEnd();
          throw x;
        }
        X2LG_LOGIN_result result = new X2LG_LOGIN_result();
        result.Read(iprot_);
        iprot_.ReadMessageEnd();
        if (result.__isset.success) {
          return result.Success;
        }
        throw new TApplicationException(TApplicationException.ExceptionType.MissingResult, "X2LG_LOGIN failed: unknown result");
      }

    }
    public class Processor : TProcessor {
      public Processor(Iface iface)
      {
        iface_ = iface;
        processMap_["X2LG_LOGIN"] = X2LG_LOGIN_Process;
      }

      protected delegate void ProcessFunction(int seqid, TProtocol iprot, TProtocol oprot);
      private Iface iface_;
      protected Dictionary<string, ProcessFunction> processMap_ = new Dictionary<string, ProcessFunction>();

      public bool Process(TProtocol iprot, TProtocol oprot)
      {
        try
        {
          TMessage msg = iprot.ReadMessageBegin();
          ProcessFunction fn;
          processMap_.TryGetValue(msg.Name, out fn);
          if (fn == null) {
            TProtocolUtil.Skip(iprot, TType.Struct);
            iprot.ReadMessageEnd();
            TApplicationException x = new TApplicationException (TApplicationException.ExceptionType.UnknownMethod, "Invalid method name: '" + msg.Name + "'");
            oprot.WriteMessageBegin(new TMessage(msg.Name, TMessageType.Exception, msg.SeqID));
            x.Write(oprot);
            oprot.WriteMessageEnd();
            oprot.Transport.Flush();
            return true;
          }
          fn(msg.SeqID, iprot, oprot);
        }
        catch (IOException)
        {
          return false;
        }
        return true;
      }

      public void X2LG_LOGIN_Process(int seqid, TProtocol iprot, TProtocol oprot)
      {
        X2LG_LOGIN_args args = new X2LG_LOGIN_args();
        args.Read(iprot);
        iprot.ReadMessageEnd();
        X2LG_LOGIN_result result = new X2LG_LOGIN_result();
        result.Success = iface_.X2LG_LOGIN(args.Data);
        oprot.WriteMessageBegin(new TMessage("X2LG_LOGIN", TMessageType.Reply, seqid)); 
        result.Write(oprot);
        oprot.WriteMessageEnd();
        oprot.Transport.Flush();
      }

    }


    #if !SILVERLIGHT
    [Serializable]
    #endif
    public partial class X2LG_LOGIN_args : TBase
    {
      private s_X2LG_LOGIN _Data;

      public s_X2LG_LOGIN Data
      {
        get
        {
          return _Data;
        }
        set
        {
          __isset.Data = true;
          this._Data = value;
        }
      }


      public Isset __isset;
      #if !SILVERLIGHT
      [Serializable]
      #endif
      public struct Isset {
        public bool Data;
      }

      public X2LG_LOGIN_args() {
      }

      public void Read (TProtocol iprot)
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                Data = new s_X2LG_LOGIN();
                Data.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }

      public void Write(TProtocol oprot) {
        TStruct struc = new TStruct("X2LG_LOGIN_args");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (Data != null && __isset.Data) {
          field.Name = "Data";
          field.Type = TType.Struct;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          Data.Write(oprot);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }

      public override string ToString() {
        StringBuilder sb = new StringBuilder("X2LG_LOGIN_args(");
        sb.Append("Data: ");
        sb.Append(Data== null ? "<null>" : Data.ToString());
        sb.Append(")");
        return sb.ToString();
      }

    }


    #if !SILVERLIGHT
    [Serializable]
    #endif
    public partial class X2LG_LOGIN_result : TBase
    {
      private s_LG2X_LOGIN _success;

      public s_LG2X_LOGIN Success
      {
        get
        {
          return _success;
        }
        set
        {
          __isset.success = true;
          this._success = value;
        }
      }


      public Isset __isset;
      #if !SILVERLIGHT
      [Serializable]
      #endif
      public struct Isset {
        public bool success;
      }

      public X2LG_LOGIN_result() {
      }

      public void Read (TProtocol iprot)
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 0:
              if (field.Type == TType.Struct) {
                Success = new s_LG2X_LOGIN();
                Success.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }

      public void Write(TProtocol oprot) {
        TStruct struc = new TStruct("X2LG_LOGIN_result");
        oprot.WriteStructBegin(struc);
        TField field = new TField();

        if (this.__isset.success) {
          if (Success != null) {
            field.Name = "Success";
            field.Type = TType.Struct;
            field.ID = 0;
            oprot.WriteFieldBegin(field);
            Success.Write(oprot);
            oprot.WriteFieldEnd();
          }
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }

      public override string ToString() {
        StringBuilder sb = new StringBuilder("X2LG_LOGIN_result(");
        sb.Append("Success: ");
        sb.Append(Success== null ? "<null>" : Success.ToString());
        sb.Append(")");
        return sb.ToString();
      }

    }

  }
}
