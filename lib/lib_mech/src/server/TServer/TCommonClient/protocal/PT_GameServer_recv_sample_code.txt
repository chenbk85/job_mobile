


// 다음코드는 스커럴에서 사용하기위한 샘플 코드

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_G_ECHO(pSock, pk ,pFromIP)
{
	local packet=S_G_ECHO(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_G_ERROR(pSock, pk ,pFromIP)
{
	local packet=S_G_ERROR(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_G_HELLO(pSock, pk ,pFromIP)
{
	local packet=S_G_HELLO(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_D2X_NOTICE(pSock, pk ,pFromIP)
{
	local packet=S_D2X_NOTICE(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2D_NOTICE_TEST(pSock, pk ,pFromIP)
{
	local packet=S_X2D_NOTICE_TEST(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_D_ECHO(pSock, pk ,pFromIP)
{
	local packet=S_D_ECHO(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2G_CHAT(pSock, pk ,pFromIP)
{
	local packet=S_X2G_CHAT(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_G2X_CHAT(pSock, pk ,pFromIP)
{
	local packet=S_G2X_CHAT(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2G_USER_EXIT(pSock, pk ,pFromIP)
{
	local packet=S_X2G_USER_EXIT(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_G2X_USER_EXIT(pSock, pk ,pFromIP)
{
	local packet=S_G2X_USER_EXIT(); packet.ReadPacket(pSock,pk);

}



// 다음코드는 C++에서 사용하기위한 샘플 코드

//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(G_ECHO)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(G_ECHO);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(G_ERROR)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(G_ERROR);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(G_HELLO)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(G_HELLO);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(D2X_NOTICE)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(D2X_NOTICE);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2D_NOTICE_TEST)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2D_NOTICE_TEST);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(D_ECHO)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(D_ECHO);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2G_CHAT)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2G_CHAT);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(G2X_CHAT)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(G2X_CHAT);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2G_USER_EXIT)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2G_USER_EXIT);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(G2X_USER_EXIT)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(G2X_USER_EXIT);

}