


// 다음코드는 스커럴에서 사용하기위한 샘플 코드

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L_ERROR(pSock, pk ,pFromIP)
{
	local packet=S_L_ERROR(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L_ECHO(pSock, pk ,pFromIP)
{
	local packet=S_L_ECHO(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L_HELLO(pSock, pk ,pFromIP)
{
	local packet=S_L_HELLO(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L2X_NOTICE(pSock, pk ,pFromIP)
{
	local packet=S_L2X_NOTICE(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2L_LOGIN(pSock, pk ,pFromIP)
{
	local packet=S_X2L_LOGIN(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L2X_USER_LOGIN_OK(pSock, pk ,pFromIP)
{
	local packet=S_L2X_USER_LOGIN_OK(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2L_GET_CHANNEL_LIST(pSock, pk ,pFromIP)
{
	local packet=S_X2L_GET_CHANNEL_LIST(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L2X_CHANNEL_LIST(pSock, pk ,pFromIP)
{
	local packet=S_L2X_CHANNEL_LIST(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2L_GET_WORLD_LIST(pSock, pk ,pFromIP)
{
	local packet=S_X2L_GET_WORLD_LIST(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L2X_WORLD_LIST(pSock, pk ,pFromIP)
{
	local packet=S_L2X_WORLD_LIST(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2L_USER_LOGIN(pSock, pk ,pFromIP)
{
	local packet=S_X2L_USER_LOGIN(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2L_USER_EXIT(pSock, pk ,pFromIP)
{
	local packet=S_X2L_USER_EXIT(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L2X_USER_EXIT(pSock, pk ,pFromIP)
{
	local packet=S_L2X_USER_EXIT(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2L_CHANNEL_SELECT(pSock, pk ,pFromIP)
{
	local packet=S_X2L_CHANNEL_SELECT(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_L2X_CHANNEL_SELECT_RESULT(pSock, pk ,pFromIP)
{
	local packet=S_L2X_CHANNEL_SELECT_RESULT(); packet.ReadPacket(pSock,pk);

}



// 다음코드는 C++에서 사용하기위한 샘플 코드

//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L_ERROR)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L_ERROR);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L_ECHO)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L_ECHO);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L_HELLO)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L_HELLO);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L2X_NOTICE)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L2X_NOTICE);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2L_LOGIN)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2L_LOGIN);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L2X_USER_LOGIN_OK)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L2X_USER_LOGIN_OK);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2L_GET_CHANNEL_LIST)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2L_GET_CHANNEL_LIST);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L2X_CHANNEL_LIST)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L2X_CHANNEL_LIST);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2L_GET_WORLD_LIST)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2L_GET_WORLD_LIST);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L2X_WORLD_LIST)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L2X_WORLD_LIST);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2L_USER_LOGIN)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2L_USER_LOGIN);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2L_USER_EXIT)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2L_USER_EXIT);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L2X_USER_EXIT)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L2X_USER_EXIT);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2L_CHANNEL_SELECT)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2L_CHANNEL_SELECT);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(L2X_CHANNEL_SELECT_RESULT)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(L2X_CHANNEL_SELECT_RESULT);

}