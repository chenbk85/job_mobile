


// 다음코드는 스커럴에서 사용하기위한 샘플 코드

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_S_HELLO(pSock, pk ,pFromIP)
{
	local packet=S_S_HELLO(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2S_LOGIN(pSock, pk ,pFromIP)
{
	local packet=S_X2S_LOGIN(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_S2X_LOGIN_OK(pSock, pk ,pFromIP)
{
	local packet=S_S2X_LOGIN_OK(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_S_ECHO(pSock, pk ,pFromIP)
{
	local packet=S_S_ECHO(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_S2X_ECHO(pSock, pk ,pFromIP)
{
	local packet=S_S2X_ECHO(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2S_THREAD_TEST1(pSock, pk ,pFromIP)
{
	local packet=S_X2S_THREAD_TEST1(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2S_THREAD_TEST2(pSock, pk ,pFromIP)
{
	local packet=S_X2S_THREAD_TEST2(); packet.ReadPacket(pSock,pk);

}

//jIPacketSocket_IOCP* pS,jPacket_Base* pk,jIP_Address* pFromIP
function jNET_EVENT_X2S_TEST_PACKET(pSock, pk ,pFromIP)
{
	local packet=S_X2S_TEST_PACKET(); packet.ReadPacket(pSock,pk);

}



// 다음코드는 C++에서 사용하기위한 샘플 코드

//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(S_HELLO)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(S_HELLO);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2S_LOGIN)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2S_LOGIN);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(S2X_LOGIN_OK)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(S2X_LOGIN_OK);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(S_ECHO)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(S_ECHO);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(S2X_ECHO)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(S2X_ECHO);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2S_THREAD_TEST1)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2S_THREAD_TEST1);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2S_THREAD_TEST2)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2S_THREAD_TEST2);

}
//jIPacketSocket_IOCP* pS,BYTE *pReadBuff, jPacketLen_t dwLen, void* pPlugIn, jIP_Address* pFromIP
jNET_EVENT_RECEIVER(X2S_TEST_PACKET)
{
	// PlugIn_UNKOWN*p , BYTE buf[1024] , TestUser* pUser
	READ_PACKET(X2S_TEST_PACKET);

}